{"version":3,"file":"static/js/802.521e44a5.chunk.js","mappings":"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","sources":["pages/Practicas/Login/Components/Login_component.jsx","pages/Practicas/Login/Login.jsx","../node_modules/@mui/material/CssBaseline/CssBaseline.js","../node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","../node_modules/@mui/system/esm/GlobalStyles/GlobalStyles.js","../node_modules/@mui/material/GlobalStyles/GlobalStyles.js","../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../node_modules/@mui/private-theming/useTheme/useTheme.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../node_modules/@mui/material/styles/ThemeProvider.js","../node_modules/@mui/system/esm/Box/Box.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport axios from \"axios\";\nimport ReplyIcon from \"@mui/icons-material/Reply\";\nimport Cookies from 'js-cookie';\nimport { useNavigate } from \"react-router-dom\";\n\n// TODO remove, this demo shouldn't need to reset the theme.\nconst defaultTheme = createTheme();\n\n\nexport default function SignIn() {\n  const navigate = useNavigate();\n\n  \n  const handleLogin = () => {\n    if (Cookies.get('token')) {\n      navigate(\"/practicas/success\");\n    }else{\n      window.location.href = \"http://localhost:3000/api/auth/google?prompt=select_account\";    }\n  }\n  \n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <CssBaseline />\n      <Box\n        sx={{\n          \n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n       <Button onClick={handleLogin}> Iniciar Sesi√≥n </Button>\n\n      </Box>\n    </ThemeProvider>\n  );\n}\n","import React from 'react'\nimport LogIn from './Components/Login_component'\nimport { Box } from '@mui/system'\n\nconst Login = () => {\n  return (    \n      <Box>\n        < LogIn/> \n      </Box>\n  )\n}\n\nexport default Login","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as MuiGlobalStyles } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles({\n  styles,\n  themeId,\n  defaultTheme = {}\n}) {\n  const upperTheme = useTheme(defaultTheme);\n  const globalStyles = typeof styles === 'function' ? styles(themeId ? upperTheme[themeId] || upperTheme : upperTheme) : styles;\n  return /*#__PURE__*/_jsx(MuiGlobalStyles, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  defaultTheme: PropTypes.object,\n  /**\n   * @ignore\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  /**\n   * @ignore\n   */\n  themeId: PropTypes.string\n} : void 0;\nexport default GlobalStyles;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from '../styles/defaultTheme';\nimport THEME_ID from '../styles/identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, _extends({}, props, {\n    defaultTheme: defaultTheme,\n    themeId: THEME_ID\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n      theme: themeInput\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const scopedTheme = themeInput[THEME_ID];\n  return /*#__PURE__*/_jsx(SystemThemeProvider, _extends({}, props, {\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;","'use client';\n\nimport PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["defaultTheme","createTheme","SignIn","navigate","useNavigate","_jsxs","ThemeProvider","theme","children","_jsx","CssBaseline","Box","sx","backgroundSize","backgroundPosition","display","justifyContent","alignItems","Button","onClick","Cookies","get","window","location","href","LogIn","html","enableColorScheme","_extends","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","vars","colorScheme","palette","mode","body","color","text","primary","typography","body1","backgroundColor","background","default","common","white","inProps","props","useThemeProps","name","_props$enableColorSch","React","GlobalStyles","styles","_theme$components","arguments","length","undefined","colorSchemeStyles","colorSchemes","Object","entries","forEach","_ref","_scheme$palette","_ref2","_slicedToArray","key","scheme","getColorSchemeSelector","replace","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","_props$defaultTheme","globalStyles","themeInput","obj","keys","Global","themeId","_ref$defaultTheme","upperTheme","useTheme","MuiGlobalStyles","SystemGlobalStyles","THEME_ID","ThemeContext","Symbol","for","localTheme","outerTheme","output","mergeOuterLocalTheme","nested","Provider","value","EMPTY_THEME","useThemeScoping","isPrivate","resolvedTheme","mergedTheme","result","_defineProperty","useThemeWithoutDefault","upperPrivateTheme","usePrivateTheme","engineTheme","privateTheme","MuiThemeProvider","StyledEngineThemeContext","_excluded","_objectWithoutPropertiesLoose","scopedTheme","SystemThemeProvider","createBox"],"sourceRoot":""}