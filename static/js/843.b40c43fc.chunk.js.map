{"version":3,"file":"static/js/843.b40c43fc.chunk.js","mappings":"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","sources":["components/Navbar/Navbar.jsx","Services/LetterService.js","pages/Coordinador/Dashboard/Sections/Tables/Tablagenericas.jsx","pages/Coordinador/Dashboard/Sections/Tables/Tablaperso.jsx","pages/Coordinador/Dashboard/Sections/Cartas.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport MuiDrawer from \"@mui/material/Drawer\";\r\nimport List from \"@mui/material/List\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst openedMixin = (theme) => ({\r\n  width: drawerWidth,\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n  overflowX: \"hidden\",\r\n});\r\n\r\nconst closedMixin = (theme) => ({\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: \"hidden\",\r\n  width: `calc(${theme.spacing(7)} + 1px)`,\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    width: `calc(${theme.spacing(8)} + 1px)`,\r\n  },\r\n});\r\n\r\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-end\",\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, {\r\n  shouldForwardProp: (prop) => prop !== \"open\",\r\n})(({ theme, open }) => ({\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: \"nowrap\",\r\n  boxSizing: \"border-box\",\r\n  ...(open && {\r\n    ...openedMixin(theme),\r\n    \"& .MuiDrawer-paper\": openedMixin(theme),\r\n  }),\r\n  ...(!open && {\r\n    ...closedMixin(theme),\r\n    \"& .MuiDrawer-paper\": closedMixin(theme),\r\n  }),\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <CssBaseline />\r\n\r\n      <Drawer variant=\"permanent\" open={open}>\r\n        <DrawerHeader>\r\n          <IconButton onClick={() => setOpen(!open)}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </DrawerHeader>\r\n        <Divider />\r\n        <List>\r\n          <ListItem\r\n            key=\"Home\"\r\n            disablePadding\r\n            sx={{ display: \"block\" }}\r\n            onClick={() => navigate(\"/coord/practicas\")}\r\n          >\r\n            <ListItemButton\r\n              sx={{\r\n                minHeight: 48,\r\n                justifyContent: open ? \"initial\" : \"center\",\r\n                px: 2.5,\r\n              }}\r\n            >\r\n              <ListItemIcon\r\n                sx={{\r\n                  minWidth: 0,\r\n                  mr: open ? 3 : \"auto\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Home\" sx={{ opacity: open ? 1 : 0 }} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem\r\n            key=\"Postulaciones\"\r\n            disablePadding\r\n            sx={{ display: \"block\" }}\r\n            onClick={()=>(navigate(\"/coord/practicas/postulaciones\"))}\r\n          >\r\n            <ListItemButton\r\n              sx={{\r\n                minHeight: 48,\r\n                justifyContent: open ? \"initial\" : \"center\",\r\n                px: 2.5,\r\n              }}\r\n            >\r\n              <ListItemIcon\r\n                sx={{\r\n                  minWidth: 0,\r\n                  mr: open ? 3 : \"auto\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary=\"Postulaciones\"\r\n                sx={{ opacity: open ? 1 : 0 }}\r\n              />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem key=\"Cartas\" disablePadding sx={{ display: \"block\" }} onClick={()=>(navigate(\"/coord/practicas/cartas\"))}>\r\n            <ListItemButton\r\n              sx={{\r\n                minHeight: 48,\r\n                justifyContent: open ? \"initial\" : \"center\",\r\n                px: 2.5,\r\n              }}\r\n            >\r\n              <ListItemIcon\r\n                sx={{\r\n                  minWidth: 0,\r\n                  mr: open ? 3 : \"auto\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Cartas\" sx={{ opacity: open ? 1 : 0 }} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem key=\"Reportes\" disablePadding sx={{ display: \"block\" }} onClick={()=>(navigate(\"/coord/practicas/reportes\"))}>\r\n            <ListItemButton\r\n              sx={{\r\n                minHeight: 48,\r\n                justifyContent: open ? \"initial\" : \"center\",\r\n                px: 2.5,\r\n              }}\r\n            >\r\n              <ListItemIcon\r\n                sx={{\r\n                  minWidth: 0,\r\n                  mr: open ? 3 : \"auto\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Reportes\" sx={{ opacity: open ? 1 : 0 }} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n          <ListItem\r\n            key=\"Ajustes y estadísticas\"\r\n            disablePadding\r\n            sx={{ display: \"block\" }}\r\n            onClick={()=>(navigate(\"/coord/practicas/settings\"))}\r\n          >\r\n            <ListItemButton\r\n              sx={{\r\n                minHeight: 48,\r\n                justifyContent: open ? \"initial\" : \"center\",\r\n                px: 2.5,\r\n              }}\r\n            >\r\n              <ListItemIcon\r\n                sx={{\r\n                  minWidth: 0,\r\n                  mr: open ? 3 : \"auto\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary=\"Ajustes y estadísticas\"\r\n                sx={{ opacity: open ? 1 : 0 }}\r\n              />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List></List>\r\n      </Drawer>\r\n    </Box>\r\n  );\r\n}\r\n","export const fetchLetters = async (type, reviewed, region) => {\r\n    const status = reviewed ? 'rev' : 'snrev';\r\n    const url = `http://localhost:3000/api/cartas-${type}/${status}/${region}`;\r\n    \r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(\"Could not fetch the data: \", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\nexport const reviewLetter = async (id) => {\r\n  const url = `http://localhost:3000/api/cartas-gen/${id}`;\r\n  \r\n  try {\r\n    const response = await fetch(url, {\r\n      method: 'PUT', \r\n      \r\n    });\r\n    return await response.json(); \r\n  } catch (error) {\r\n    console.error(\"Error reviewing the letter: \", error);\r\n  }\r\n};\r\n\r\nexport const revertLetterReview = async (id) => {\r\n  const url = `http://localhost:3000/api/cartas-gen/${id}`;\r\n  \r\n  try {\r\n    const response = await fetch(url, {\r\n      method: 'PUT', \r\n      \r\n    });\r\n    return await response.json(); \r\n  } catch (error) {\r\n    console.error(\"Error reverting the letter review: \", error);\r\n  }\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { fetchLetters } from '../../../../../Services/LetterService';\r\nimport axios from 'axios';\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst API_BASE_URL = 'http://localhost:3000/api/cartas-gen';\r\n\r\nexport default function Tablagenericas({ region }) {\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [reviewedStatus, setReviewedStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchLetters('gen', reviewedStatus, region)\r\n      .then(data => {\r\n        setRows(data.map(item => ({\r\n          id: item.id,\r\n          run: item.estudiante.run,\r\n          nombre: `${item.estudiante.primerNombre} ${item.estudiante.segundoNombre}`.trim(),\r\n          apellidop: item.estudiante.apellidoPaterno,\r\n          apellidom: item.estudiante.apellidoMaterno,\r\n          fsolicitud: new Date(item.fechaCreado).toLocaleString(),\r\n          factualizacion: new Date(item.fechaActualizacion).toLocaleString(),\r\n          revisado: item.revisado,\r\n        })));\r\n      })\r\n      .catch(error => {\r\n        console.error('Failed to fetch letters:', error);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [reviewedStatus, region]);\r\n\r\n  const fetchAndUpdateLetters = () => {\r\n    setLoading(true);\r\n    fetchLetters('gen', reviewedStatus, region)\r\n      .then(data => {\r\n        setRows(data.map(item => ({\r\n          id: item.id,\r\n          run: item.estudiante.run,\r\n          nombre: `${item.estudiante.primerNombre} ${item.estudiante.segundoNombre}`.trim(),\r\n          apellidop: item.estudiante.apellidoPaterno,\r\n          apellidom: item.estudiante.apellidoMaterno,\r\n          fsolicitud: new Date(item.fechaCreado).toLocaleString(),\r\n          factualizacion: new Date(item.fechaActualizacion).toLocaleString(),\r\n          revisado: item.revisado,\r\n        })));\r\n      })\r\n      .catch(error => {\r\n        console.error('Failed to fetch letters:', error);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const handleReview = async (id) => {\r\n    try {\r\n      const response = await axios.patch(`${API_BASE_URL}/${id}`, { revisado: true }, {\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const updatedLetter = response.data;\r\n      if (updatedLetter.affected === 1) {\r\n        fetchAndUpdateLetters(); // Actualizar datos después de marcar como revisado\r\n        Swal.fire('Success!', 'The letter has been marked as reviewed.', 'success');\r\n      } else {\r\n        Swal.fire('Notice!', 'No changes were made.', 'info');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.response ? error.response.data : error.message);\r\n      Swal.fire('Failed!', 'There was an issue updating the letter.', 'error');\r\n    }\r\n  };\r\n\r\n  const handleRevertReview = async (id) => {\r\n    try {\r\n      const response = await axios.patch(`${API_BASE_URL}/${id}`, { revisado: false }, {\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const updatedLetter = response.data;\r\n      if (updatedLetter.affected === 1) {\r\n        fetchAndUpdateLetters(); // Actualizar datos después de revertir la revisión\r\n        Swal.fire('Success!', 'The letter has been reverted to not reviewed.', 'success');\r\n      } else {\r\n        Swal.fire('Notice!', 'No changes were made.', 'info');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.response ? error.response.data : error.message);\r\n      Swal.fire('Failed!', 'There was an issue reverting the letter.', 'error');\r\n    }\r\n  };\r\n\r\n  const handleDeleteLetter = async (id) => {\r\n    try {\r\n      const confirmResult = await Swal.fire({\r\n        title: 'Confirm Deletion',\r\n        text: 'Are you sure you want to delete this letter?',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#d33',\r\n        cancelButtonColor: '#3085d6',\r\n        confirmButtonText: 'Yes, delete it!'\r\n      });\r\n      if (confirmResult.isConfirmed) {\r\n        const response = await axios.delete(`${API_BASE_URL}/${id}`);\r\n        if (response.status === 200) {\r\n          fetchAndUpdateLetters(); // Actualizar datos después de eliminar la carta\r\n          Swal.fire('Success!', 'The letter has been deleted.', 'success');\r\n        } else {\r\n          Swal.fire('Notice!', 'No changes were made.', 'info');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.response ? error.response.data : error.message);\r\n      Swal.fire('Failed!', 'There was an issue deleting the letter.', 'error');\r\n    }\r\n  };\r\n\r\n  const handleGenerateOrUpdate = async (id) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/${id}`);\r\n      if (response.status === 200) {\r\n        fetchAndUpdateLetters(); // Actualizar datos después de generar o actualizar la carta\r\n        Swal.fire('Success!', 'The letter has been generated or updated.', 'success');\r\n      } else {\r\n        Swal.fire('Notice!', 'No changes were made.', 'info');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.response ? error.response.data : error.message);\r\n      Swal.fire('Failed!', 'There was an issue generating or updating the letter.', 'error');\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'run', headerName: 'RUN', width: 150 },\r\n    { field: 'nombre', headerName: 'Nombre', width: 150 },\r\n    { field: 'apellidop', headerName: 'A. Paterno', width: 150 },\r\n    { field: 'apellidom', headerName: 'A. Materno', width: 150 },\r\n    { field: 'fsolicitud', headerName: 'Fecha Solicitud', width: 180 },\r\n    { field: 'factualizacion', headerName: 'Fecha Modificación', width: 180 },\r\n    { field: 'revisado', headerName: 'Revisado', width: 120 },\r\n    {\r\n      field: 'accion',\r\n      headerName: 'Acción',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <>\r\n          {params.row.revisado ? (\r\n            <>\r\n              <IconButton color=\"primary\">\r\n                <FileDownloadIcon />\r\n              </IconButton>\r\n              <IconButton onClick={() => handleRevertReview(params.row.run)} color=\"primary\">\r\n                <ReplayIcon />\r\n              </IconButton>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <IconButton onClick={() => handleReview(params.row.run)} color=\"primary\">\r\n                <CheckCircleIcon />\r\n              \r\n              </IconButton>\r\n              <IconButton onClick={() => handleDeleteLetter(params.row.run)} color=\"primary\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n              <IconButton onClick={() => handleGenerateOrUpdate(params.row.run)} color=\"primary\">\r\n                <DescriptionIcon /> \r\n              </IconButton>\r\n            </>\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 400,\r\n        width: '100%',\r\n        '& .MuiDataGrid-cell:focus': {\r\n          outline: 'none',\r\n        },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          gap: 2,\r\n          padding: 2\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => setReviewedStatus(false)}\r\n        >\r\n          No Revisadas\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setReviewedStatus(true)}\r\n        >\r\n          Revisadas\r\n        </Button>\r\n      </Box>\r\n      <DataGrid\r\n        rows={rows.filter(row => reviewedStatus ? row.revisado : !row.revisado)}\r\n        columns={columns}\r\n        pageSize={5}\r\n        rowsPerPageOptions={[5, 10, 20]}\r\n        loading={loading}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { fetchLetters } from '../../../../../Services/LetterService';\r\nimport axios from 'axios';\r\n\r\nconst MySwal = withReactContent(Swal);\r\nconst API_BASE_URL = 'http://localhost:3000/api/cartas-per';\r\n\r\nexport default function Tablagenericas({ region }) {\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [reviewedStatus, setReviewedStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchLetters('per', reviewedStatus, region)\r\n      .then(data => {\r\n        setRows(data.map(item => ({\r\n          id: item.id,\r\n          run: item.estudiante.run,\r\n          nombre: `${item.estudiante.primerNombre} ${item.estudiante.segundoNombre}`.trim(),\r\n          apellidop: item.estudiante.apellidoPaterno,\r\n          apellidom: item.estudiante.apellidoMaterno,\r\n          fsolicitud: new Date(item.fechaCreado).toLocaleString(),\r\n          factualizacion: new Date(item.fechaActualizacion).toLocaleString(),\r\n          revisado: item.revisado,\r\n        })));\r\n      })\r\n      .catch(error => {\r\n        console.error('Failed to fetch letters:', error);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [reviewedStatus, region]);\r\n\r\n  const fetchAndUpdateLetters = () => {\r\n    setLoading(true);\r\n    fetchLetters('per', reviewedStatus, region)\r\n      .then(data => {\r\n        setRows(data.map(item => ({\r\n          id: item.id,\r\n          run: item.estudiante.run,\r\n          nombre: `${item.estudiante.primerNombre} ${item.estudiante.segundoNombre}`.trim(),\r\n          apellidop: item.estudiante.apellidoPaterno,\r\n          apellidom: item.estudiante.apellidoMaterno,\r\n          fsolicitud: new Date(item.fechaCreado).toLocaleString(),\r\n          factualizacion: new Date(item.fechaActualizacion).toLocaleString(),\r\n          revisado: item.revisado,\r\n        })));\r\n      })\r\n      .catch(error => {\r\n        console.error('Failed to fetch letters:', error);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const handleReview = async (id) => {\r\n    try {\r\n      const response = await axios.patch(`${API_BASE_URL}/${id}`, { revisado: true }, {\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const updatedLetter = response.data;\r\n      if (updatedLetter.affected === 1) {\r\n        fetchAndUpdateLetters(); // Actualizar datos después de marcar como revisado\r\n        Swal.fire('Success!', 'The letter has been marked as reviewed.', 'success');\r\n      } else {\r\n        Swal.fire('Notice!', 'No changes were made.', 'info');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.response ? error.response.data : error.message);\r\n      Swal.fire('Failed!', 'There was an issue updating the letter.', 'error');\r\n    }\r\n  };\r\n\r\n  const handleRevertReview = async (id) => {\r\n    try {\r\n      const response = await axios.patch(`${API_BASE_URL}/${id}`, { revisado: false }, {\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      const updatedLetter = response.data;\r\n      if (updatedLetter.affected === 1) {\r\n        fetchAndUpdateLetters(); // Actualizar datos después de revertir la revisión\r\n        Swal.fire('Success!', 'The letter has been reverted to not reviewed.', 'success');\r\n      } else {\r\n        Swal.fire('Notice!', 'No changes were made.', 'info');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.response ? error.response.data : error.message);\r\n      Swal.fire('Failed!', 'There was an issue reverting the letter.', 'error');\r\n    }\r\n  };\r\n\r\n  const handleDeleteLetter = async (id) => {\r\n    try {\r\n      const confirmResult = await Swal.fire({\r\n        title: 'Confirm Deletion',\r\n        text: 'Are you sure you want to delete this letter?',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#d33',\r\n        cancelButtonColor: '#3085d6',\r\n        confirmButtonText: 'Yes, delete it!'\r\n      });\r\n      if (confirmResult.isConfirmed) {\r\n        const response = await axios.delete(`${API_BASE_URL}/${id}`);\r\n        if (response.status === 200) {\r\n          fetchAndUpdateLetters(); // Actualizar datos después de eliminar la carta\r\n          Swal.fire('Success!', 'The letter has been deleted.', 'success');\r\n        } else {\r\n          Swal.fire('Notice!', 'No changes were made.', 'info');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error.response ? error.response.data : error.message);\r\n      Swal.fire('Failed!', 'There was an issue deleting the letter.', 'error');\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'run', headerName: 'RUN', width: 150 },\r\n    { field: 'nombre', headerName: 'Nombre', width: 150 },\r\n    { field: 'apellidop', headerName: 'A. Paterno', width: 150 },\r\n    { field: 'apellidom', headerName: 'A. Materno', width: 150 },\r\n    { field: 'fsolicitud', headerName: 'Fecha Solicitud', width: 180 },\r\n    { field: 'factualizacion', headerName: 'Fecha Modificación', width: 180 },\r\n    { field: 'revisado', headerName: 'Revisado', width: 120 },\r\n    {\r\n      field: 'accion',\r\n      headerName: 'Acción',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <>\r\n          {params.row.revisado ? (\r\n            <>\r\n              <IconButton color=\"primary\">\r\n                <FileDownloadIcon />\r\n              </IconButton>\r\n              <IconButton onClick={() => handleRevertReview(params.row.run)} color=\"primary\">\r\n                <ReplayIcon />\r\n              </IconButton>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <IconButton onClick={() => handleReview(params.row.run)} color=\"primary\">\r\n                <CheckCircleIcon />\r\n              </IconButton>\r\n              <IconButton color=\"primary\">\r\n                <DescriptionIcon />\r\n              </IconButton>\r\n              <IconButton onClick={() => handleDeleteLetter(params.row.run)} color=\"primary\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </>\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 400,\r\n        width: '100%',\r\n        '& .MuiDataGrid-cell:focus': {\r\n          outline: 'none',\r\n        },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          gap: 2,\r\n          padding: 2\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => setReviewedStatus(false)}\r\n        >\r\n          No Revisadas\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setReviewedStatus(true)}\r\n        >\r\n          Revisadas\r\n        </Button>\r\n      </Box>\r\n      <DataGrid\r\n        rows={rows.filter(row => reviewedStatus ? row.revisado : !row.revisado)}\r\n        columns={columns}\r\n        pageSize={5}\r\n        rowsPerPageOptions={[5, 10, 20]}\r\n        loading={loading}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Sidebar from \"../../../../components/Navbar/Navbar\"; // This import path may vary\r\nimport Tablagenericas from \"./Tables/Tablagenericas\"; // This import path may vary\r\nimport Tablaperso from \"./Tables/Tablaperso\"; // This import path may vary\r\n\r\nfunction Cartas() {\r\n  const [activeTable, setActiveTable] = useState(null);\r\n  const [showTransition, setShowTransition] = useState(false);\r\n  const region = 'Valparaíso'; // This can be dynamic based on user input or selection\r\n\r\n  const handleGenericButtonClick = () => {\r\n    setActiveTable('genericas');\r\n    setShowTransition(true);\r\n  };\r\n\r\n  const handlePersonalizedButtonClick = () => {\r\n    setActiveTable('personalizadas');\r\n    setShowTransition(true);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <Sidebar />\r\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\r\n        <Box sx={{ display: \"flex\", gap: 2 }}>\r\n          {/* Card for Generic Letters */}\r\n          <Card sx={{ minWidth: 275, maxWidth: 500 }}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <CardContent>\r\n                <Typography variant=\"h4\" sx={{ padding: 2 }}>\r\n                  Cartas Genéricas\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ padding: 2 }}>\r\n                  En esta sección se verán todas las cartas de presentación genéricas que se han solicitado los alumnos.\r\n                </Typography>\r\n                <Button\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={handleGenericButtonClick}\r\n                >\r\n                  Visualizar Cartas Genéricas\r\n                </Button>\r\n              </CardContent>\r\n            </Box>\r\n          </Card>\r\n\r\n          {/* Card for Personalized Letters */}\r\n          <Card sx={{ minWidth: 275, maxWidth: 500 }}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <CardContent>\r\n                <Typography variant=\"h4\" sx={{ padding: 2 }}>\r\n                  Cartas Personalizadas\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ padding: 2 }}>\r\n                  En esta sección se verán todas las cartas de presentación personalizadas que se han solicitado los alumnos.\r\n                </Typography>\r\n                <Button\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={handlePersonalizedButtonClick}\r\n                >\r\n                  Visualizar Cartas Personalizadas\r\n                </Button>\r\n              </CardContent>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n        \r\n        {/* Table Display Area */}\r\n        <Box sx={{ padding: 1 }}>\r\n          <Box\r\n            sx={{\r\n              opacity: showTransition ? 1 : 0,\r\n              transition: 'opacity 0.5s ease-in-out',\r\n            }}\r\n          >\r\n            {activeTable === \"genericas\" && <Tablagenericas region={region} />}\r\n            {activeTable === \"personalizadas\" && <Tablaperso region={region} />}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Cartas;\r\n"],"names":["openedMixin","theme","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","_defineProperty","leavingScreen","concat","spacing","breakpoints","up","DrawerHeader","styled","_ref2","_objectSpread","display","alignItems","justifyContent","padding","mixins","toolbar","Drawer","MuiDrawer","shouldForwardProp","prop","_ref3","open","flexShrink","whiteSpace","boxSizing","MiniDrawer","useTheme","_React$useState","React","_React$useState2","_slicedToArray","setOpen","navigate","useNavigate","_jsxs","Box","sx","children","_jsx","CssBaseline","variant","IconButton","onClick","direction","ChevronRightIcon","ChevronLeftIcon","Divider","List","ListItem","disablePadding","ListItemButton","minHeight","px","ListItemIcon","minWidth","mr","InboxIcon","ListItemText","primary","opacity","fetchLetters","_x","_x2","_x3","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","type","reviewed","region","status","url","response","wrap","_context","prev","next","fetch","sent","ok","Error","json","abrupt","t0","console","error","stop","apply","arguments","API_BASE_URL","withReactContent","Swal","Tablagenericas","_ref4","_ref5","_useState","useState","_useState2","rows","setRows","_useState3","_useState4","loading","setLoading","_useState5","_useState6","reviewedStatus","setReviewedStatus","useEffect","then","data","map","item","id","run","estudiante","nombre","primerNombre","segundoNombre","trim","apellidop","apellidoPaterno","apellidom","apellidoMaterno","fsolicitud","Date","fechaCreado","toLocaleString","factualizacion","fechaActualizacion","revisado","catch","finally","fetchAndUpdateLetters","columns","field","headerName","renderCell","params","_Fragment","row","color","FileDownloadIcon","_callee2","_context2","axios","patch","headers","affected","message","handleRevertReview","ReplayIcon","handleReview","CheckCircleIcon","_callee3","_context3","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","delete","handleDeleteLetter","DeleteIcon","_x4","_callee4","_context4","post","handleGenerateOrUpdate","DescriptionIcon","height","outline","gap","Button","DataGrid","filter","pageSize","rowsPerPageOptions","activeTable","setActiveTable","showTransition","setShowTransition","Sidebar","component","flexGrow","p","Card","maxWidth","flexDirection","CardContent","Typography","size","Tablaperso"],"sourceRoot":""}